// Note1: Taken from: https://medium.com/dev-bits/everything-i-know-about-writing-modular-javascript-applications-37c125d8eddf
// Note2: Taken from: https://medium.com/@carmenwick/webpack-tutorial-part-1-the-basics-f82e3879a3f8
{
  // The name of this project
  "name": "makercam5App",

  // The version of this project
  "version": "1.0.0",

  // The description  of this project
  "description": "Port of makercam written in flash to HTML5 using PIXI",

  // The main output of this package
  "main": "./dist/makercam5App.js",

  "scripts": {
    // --color Enables/Disables colors on the console.
    "start": "npm run build:prod && webpack-dev-server --inline --color",
    // Alias for start
    "devServer": "webpack-dev-server --inline --color ",
    "devServerPack": "webpack-dev-server --inline --color --openPage ",


    "postinstall": "echo npm run bootstrap",

    // How we do a clean
    "clean": "rimraf js/* dist/makercam5App.* dist/makercam5.* ",
    "cleanCache": "rimraf $HOME/Library/Caches/Google/Chrome $HOME/Library/Caches/com.microsoft.VSCode",

    // Unused at this time
    "xpretest": "echo npm run lint && npm run build",
    "coverage": "echo npm run pretest && nyc floss --path=test && nyc report --reporter=html",
    "coverage:ci": "echo npm run pretest && nyc floss --path=test && nyc report --reporter=text-lcov > coverage.lcov",
    "docs": "mkdirp dist && jsdoc -c jsdoc.conf.json -R README.md",
    "xtypes:default": "echo mkdirp dist/types && jsdoc -c types/jsdoc.conf.json && node types/assemble pixi.js",

    // Run type checking only, do not build
    "types": "tsc",

    // Continually Run type checking only, do not build
    "startTypes": "tsc --watch",

    // Run pixify to create pixi-ui.js library
    "lib": "pixify --name pixi-ui --license ./LICENSE --source ./js/ui --dest ./dist --compress false --minify false",
    "startLib": "pixify --name pixi-ui --source ./js/ui --dest ./dist --compress false --minify false --watch",

    // Unused at this time
    "lint": "eslint --ext com/",
    "lintfix": "npm run lint com/*app/*.ts --fix",
    "pretest": "echo 'pretest. not running: npm run build:dev'",

    // How test is done
    "test": "npm run clean && npm run build:dev && mochapack --mode development --require test/pixi-setup.js test/*/*.ts test/*/*/*.ts",
    // As compared to a full test with a clean compile
    "atest": "mochapack --mode development --require test/pixi-setup.js",

    // continually watch for changes and test them
    "startTest": "npm run build:dev && mochapack --watch --mode development --require test/pixi-setup.js test/*/*.ts test/*/*/*.ts",

    // Clean prior to any type of build
    "prebuild": "echo 'Not running clean'",
    "prebuild:dev": "echo 'Not running clean'",
    "prebuild:prod": "npm run clean",

    // the default build is for dev
    "build": "npm run build:dev",

    // Do not bundle pixi.js
    "build:prod": "webpack --mode production",

    // Bundle pixi.js for testing
    "build:dev": "webpack --mode development",
    // Alias
    "dev": "npm run build:dev",

    "postbuild": "npm run types",

    // Continious building is in development mode
    "watch": "webpack --mode development --watch",
    // Alias
    "startBuild": "npm run watch",

    // Not used at this time
    "predist": "npm run build:prod && npm run test",
    "dist": "echo npm run docs",
    "postdist": "echo copyfiles -f bundles/*/dist/* dist && copyfiles -f \"packages/**/dist/*\" dist/packages",
    "prerelease": "echo npm run clean:build && npm test",
    "postversion": "echo npm run build:prod",
    "release": "echo npm publish . "
  },
  // Not used at this time
  "xpre-commit": [
    "lintfix"
  ],
  // Me ;-)
  "author": "John Talbot",

  // I believe in totally free use as long as it is stated as such.
  "license": "MIT",

  // Production requirements
  "dependencies": {
     "eventemitter3": "^4.0.0",
     "jquery": "^3.4.1",
     "pixi.js": "^5.2.1"
  },

  // Development requirements
  "devDependencies": {

    // The command line interface to babel
    "@babel/cli": "^7.8.4",

    // The core translator from javascript to its final form
    "@babel/core": "^7.8.4",

    // Allow class properties in javascript
    "@babel/plugin-proposal-class-properties": "^7.8.3",

    "@babel/plugin-proposal-object-rest-spread": "^7.8.3",
    // Allow private properties in javascript
    "@babel/plugin-proposal-private-methods": "^7.8.3",

    // How babel turns output into compatability between firefox/IE ...
    "@babel/preset-env": "^7.8.4",

    // The same for typescript
    "@babel/preset-typescript": "^7.8.3",

    // Pixi javascript documentation templates
    "@pixi/jsdoc-template": "^2.5.1",

    // For type checking use of jquery in main.ts
    "@types/jquery": "^3.3.33",

    // For type checking of mocha test files
    "@types/mocha": "^7.0.2",

    // For Typescript and pixi type definitions
    // already part of pixi5
    //"@types/pixi.js": "^5.0.0",

    // For underscore, when it gies, this goes
    "@types/underscore": "^1.9.4",

    // The eslint parser to use
    "babel-eslint": "^10.0.3",

    // The loader to convert to proper javascript
    "babel-loader": "^8.0.6",

    // A real canvas
    "canvas": "^2.6.1",

    // Chai methods for Unit testing
    "chai": "~4.2.0",

    // Used in post distribution.  Not used yet ...
    "copyfiles": "^2.2.0",

    // Lint for javascript
    "eslint": "^6.8.0",

    // We use config-prettier and in our .eslint.config
    "eslint-config-prettier": "^6.10.0",

    // For Webpack to use eslint
    "eslint-webpack-plugin": "^0.1.0",

    //"eventemitter3": "^4.0.0",
    "glob": "^7.1.3",

    // Output project html based on a template that hooks
    // into webpack
    "html-webpack-plugin": "^3.2.0",


    "jsdoc": "^3.5.5",

    // A canvas template for jsdom unit testing, when there is no canvas
    "jsdom-canvas-2": "^11.6.3-alpha.0",

    // Another compressor like Uglify.  Remove ????
    "minimist": "^1.2.0",

    // Unit testing
    "mocha": "^7.0.1",

    // Allow arrays of webpack.config.js Configuration elements
    "mocha-webpack": "^2.0.0-beta.0",
    "mochapack": "^1.1.13",

    // Hmm
    "nyc": "^15.0.0",

    // For parallel webpack builds
    "parallel-webpack": "^2.4.0",

    // A way of getting path information like __dirname
    "path": "^0.12.7",

    // For mocha testing of source like apps.ts
    "pixi.js-legacy": "^5.2.1",

    // Dont know how to get webpack to create a proper library yet
    "pixify": "^1.9.0",

    // Hmmm
    "pre-commit": "^1.2.2",

    // For a platform independant way of removing files
    "rimraf": "^3.0.2",

    // For unit testing listeners
    "sinon": "^9.0.0",
    "sinon-chai": "^3.4.0",

    // The Typescript loader into webpack
    "ts-loader": "^6.2.1",

    // Use typescript to build webpack.conf.js
    "ts-node": "^8.6.2",

    // Typescript documentation compiler
    "tsd-jsdoc": "^2.1.3",

    // The typescript compiler
    "typescript": "^3.7.5",

    // A Webpack minimizer of the final product
    "uglifyjs-webpack-plugin": "^2.2.0",

    // Required for our operations - remove later
    "underscore": "^1.9.2",

    // Webpack itself
    "webpack": "^4.41.6",

    // Webpack command line interface
    "webpack-cli": "^3.3.11",

    // Webpack web server
    "webpack-dev-server": "^3.10.3"
  }
}
